version: 2
jobs:
  build:
    docker:
      - image: circleci/node:6.10

    working_directory: ~/sls-lambdas

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: npm test

      - deploy:
          name: conditionally run a deploy job
          command: |
            if [[ true ]]; then
              curl \
              --user e5abd6172a8aa802f1c85dcf7b9e7a159ffc29be \
              --data build_parameters[CIRCLE_JOB]=deploy_lambda \
              --data build_parameters[lambda_name]=$lambda_name \
              --data revision=$CIRCLE_SHA1 \
                https://circleci.com/api/v1.1/project/github/octo-technology-downunder/sls-lambdas/tree/master
            fi

  deploy_lambda:
    docker:
      - image: circleci/python:3.6.4

    working_directory: ~/sls-lambdas

    steps:
      - checkout
      - run:
          name: Install Python deps
          command: sudo pip install awscli
      - run:
          name: Install Python deps
          command: sudo pip install pyyaml
      - run:
          name: Publish on Serverless repository
          command: bash publish_lambda.sh

workflows:
  version: 2
  build-deploy:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build:
          context: org-global
          filters:
            branches:
              only: master
#      - deploy:
#          context: org-global
#          requires:
#            - build
#          filters:
#            branches:
#              only: master