version: 2
jobs:
  build:
    docker:
      - image: circleci/node:6.10

    working_directory: ~/sls-lambdas

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: npm test

      - run: sudo npm install -g serverless

      - run: sls package
      - run: ls -all ./
      - run: ls -all ./.serverless
      - run: ls -all ~/sls-lambdas/.serverless

  deploy:
    docker:
      - image: circleci/python:3.6.4

    working_directory: ~/sls-lambdas

    steps:
      - checkout
      - run:
          name: Set lambda name
          command: bash set_deploy_params.sh
      - run:
          name: Install Python deps
          command: sudo pip install awscli
      - run:
          name: Install Python deps
          command: sudo pip install pyyaml
      - run:
          name: Publish on Serverless repository
          command: bash publish_lambda.sh
      - run:
          name: Reset lambda name
          command: bash reset_deploy_params.sh

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          context: sls-lambdas
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^deploy.*/
      - deploy:
          context: sls-lambdas
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^deploy.*/